/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package gcp.buckets;

import com.google.cloud.WriteChannel;
import com.google.cloud.storage.*;

import java.io.File;
import java.nio.ByteBuffer;
import java.nio.file.Files;

public class App {

    // The name for the new bucket
    private static String BUCKET_NAME = "the-fancy-test-bucket";
    // Instantiates a client
    static private Storage Storage = StorageOptions.getDefaultInstance().getService();
    static private String CONTENT_TYPE = "image/jpeg";


    public static void main(String... args) throws Exception {

        final String rootPath = ".";
        String fileKey = "chicago-bean1.jpg";
        String uploadFilePath = rootPath + "/chicago-bean1.jpg";
        createAndSave(fileKey, uploadFilePath);

        fileKey = "chicago-bean2.jpg";
        uploadFilePath = rootPath + "/chicago-bean2.jpg";
        addFile(fileKey, uploadFilePath);
    }

    static private void createAndSave(String fileKey, String uploadFilePath) throws Exception {

        createBucket(BUCKET_NAME);

        BlobInfo blobInfo = buildBlobInfo(fileKey);
        byte[] fileContent = buildImageBytes(uploadFilePath);
        Storage.create(blobInfo, fileContent);
        System.out.printf("Uploaded initial file %s created.%n", uploadFilePath);

    }

    static private BlobInfo buildBlobInfo(String fileKey) throws Exception {
        BlobId blobId = BlobId.of(BUCKET_NAME, fileKey);
        return BlobInfo.newBuilder(blobId).setContentType(CONTENT_TYPE).build();
    }

    static private void createBucket(String bucketName) {

        // Creates the new bucket
        Bucket bucket = Storage.create(BucketInfo.of(bucketName));

        System.out.printf("Bucket %s created.%n", bucket.getName());
    }

    static private void addFile(String fileKey, String uploadFilePath) throws Exception {

        BlobInfo blobInfo = buildBlobInfo(fileKey);
        byte[] fileContent = buildImageBytes(uploadFilePath);

        try (WriteChannel writer = Storage.writer(blobInfo)) {
            try {
                writer.write(ByteBuffer.wrap(fileContent, 0, fileContent.length));
            } catch (Exception ex) {
                // handle exception
            }
        }
        System.out.printf("Uploaded new file %s created.%n", uploadFilePath);
        // [END writer]
    }

    static private byte[] buildImageBytes(String uploadFilePath) throws Exception {
        File file = new File(uploadFilePath);
        return Files.readAllBytes(file.toPath());
    }


}

